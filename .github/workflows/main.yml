name: Build and Publish

on:
  # run it on push to the default repository branch
  push:
    branches: [master]
    tags: 
    - '**'

jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract metadata for the Docker image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: nathancassee/se-sa-transformer
      
      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./
          # Note: tags has to be all lower-case
          tags: ${{ steps.meta.outputs.tags }}
          # build on feature branches, push only on main branch or when a tag is pushed
          push: ${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags') }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: push README to Dockerhub
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKER_TOKEN }}
        with:
          destination_container_repo: ${{ secrets.DOCKER_USERNAME }}/se-sa-transformer
          provider: dockerhub
          short_description: 'Dockerized instance of bert based transformers'
          readme_file: 'README.md'

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
